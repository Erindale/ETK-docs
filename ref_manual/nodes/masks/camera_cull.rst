.. index:: Masks; Camera Cull
.. _etk-masks-camera_cull:

************
 Camera Cull
************

.. figure:: /images/nodes-camera_cull.png
   :align: right

   The ETK_Camera Cull node.

The **Camera Cull** group handles culling points to the view area, also
called `Frustum Culling <https://en.wikipedia.org/wiki/Viewing_frustum>`_.
The node requires a camera object to function
as the culling is calculated based on the location and rotation of the
camera.

The node works both with the vertices of the object or with points
generated by a :ref:`etk-utilities-point_distribute` node. The two
outputs contain the points inside and outside the view region of the
camera.


Inputs
=======

|OBJECT| Camera
   Select the active camera object.

|FLOAT_FIELD_SINGLE| Camera FOV
   Input the cameraâ€™s Field of View (not the focal length).

|INTEGER_FIELD_SINGLE| Resolution X
   The render output width.

|INTEGER_FIELD_SINGLE| Resolution Y
   The render output height.

|FLOAT_FIELD_SINGLE| Padding
    How far beyond the FOV to include points.

|BOOLEAN_FIELD_SINGLE| Extend to Camera?
    Toggles off the Y- clipping of points. Useful for lower angles
    where instances might pop into close view.


Outputs
========

|FLOAT_FIELD| Mask
   A mask of the area within the camera's FOV


Examples
========

.. rubric:: Culling small cubes

The simplest example takes a little setup. First, let's create a
large expanse of cubes using a 5x5m grid, 50 vertices on each side,
and instance some points on the faces of that grid.

.. figure:: /images/nodes-camera_cull_basic_01.png
   :align: center
   :width: 800

   A simple distribution of cubes on a grid.

If what we want is an expanse of objects with a camera shot of only a
portion of that expanse, we don't really need to instance objects
outside our field of view. Without culling, our camera shot will look
like this.

.. figure:: /images/nodes-camera_cull_basic_02.png
   :align: center
   :width: 800

   The overall view with no culling.

.. figure:: /images/nodes-camera_cull_basic_03.png
   :align: right
   :width: 300

Position and select the camera. In the camera **Properties** tab, set
the **Lens Unit** to *Field of View*. Right click on the **Field of
View** entry box and select *Copy as New Driver*. Our plan is to paste
this value as a driver into our **Camera Cull** group to make it easier to
adjust our field of view outside of the geometry nodes editor.

Back to the original node setup, add a **Camera Cull** group node to
the setup and,

   * Attach it to the *Selection* input of the **Instance on
     Points** node.
   * Paste the driver selected into the *Camera FOV* value.

The number of instanced cubes should now be constrained by the **Camera
Cull** mask node.

.. figure:: /images/nodes-camera_cull_basic_04.png
   :align: center
   :width: 800

   The view with cubes outside of the view culled.

Your final composition may require some adjustments,

   * Adjust the *Padding* to enlarge the mask to include objects just
     outside the FOV.
   * Select *Extend to Camera* to include foreground objects if
     desired.
